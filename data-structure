submited user database:
{
    ShomareDaneshjuyii (number) : BachId
    CodeMelli * (number)        : CodeMelli
    Email (string)              : email
    ShomareTelephone * (string) : TelNum
    Degree (array of objects)   : Degs
    Nam (string)                : BachName
    NamKhanevadegi (string)     : BachLname
    Bio (string)                : Bio
}
    *:  private
---------------------------------------------------

university database:
{
    ShomareDaneshjuyii (number) : BachId
    CodeMelli (number)          : CodeMelli
    Degree * (array of objects) : Degs
    Nam (string)                : BachName
    NamKhanevadegi (string)     : BachLname
}
    *:  Degree is array of Degs


Branches database:
{
    index (number)              : increament index of current branch
    BranchName  (string)        : name of this branch
    Ranks (array of objects)    : [{
        index (number)          : index of current Rank
        RankName (string)       : name of this Rank
        Orientations (ObjArr)   : [{
            index (number)      : index of current Orientation
            OriName (string)    : name of current Orientation
        }]
    }]
}








objects:

Degs: [
{
    Branch (number)             : index of degree branch on Branches database
    Rank (number)               : index of Rank for this degree
    Ori (number)                : index of Orientation in Rank
    SalEtmam (number)           : year graduation
    Description (string)        : a Description about this degree, usually nothing
}
]






when unidatabase completes, the new bach info goes to another json file (named : 'NameBachSims.json')
this file contains array of objects, each object is a bachelor name, lastname and BachId
this database is being used when a user forgets the BachId.the program should search for any matched name and last name.

NameBachSims:
{
    BachCount       :       bachelors count confirmed
    BacheInfo       :   [
        {
            BachId
            BachName
            BachLname
        }
    ]
}